<script>

    let setValid = (element, value) => {
        if (value) {
            element.classList.remove("badge-warning");
            element.classList.add("badge-success");
        } else {
            element.classList.remove("badge-success");
            element.classList.add("badge-warning");
        }
    };

    var sign_btn = document.getElementById("sign_btn")

    let checkValidate = (password) => {

        axios.post('/auth/password', {
            password: password
        }).then(response => {
            sign_btn.disabled = !response;
        }).catch(error => {
            console.log(error);
            sign_btn.disabled = true;
        });

    }

    var pwd = document.getElementById("inputPassword");

    var alert_min = document.getElementById("alert_min");
    var alert_max = document.getElementById("alert_max");
    var alert_up = document.getElementById("alert_up");
    var alert_low = document.getElementById("alert_low");
    var alert_dig = document.getElementById("alert_dig");
    var alert_sim = document.getElementById("alert_sim");
    var alert_nospace = document.getElementById("alert_nospace");

    setValid(alert_min, false);
    setValid(alert_max, false);
    setValid(alert_low, false);
    setValid(alert_up, false);
    setValid(alert_dig, false);
    setValid(alert_sim, false);
    setValid(alert_nospace, false);

    sign_btn.disabled = true;

    pwd.onkeyup = function() {

        // Validate lowercase letters
        var lowerCaseLetters = /[a-z]/g;
        if (pwd.value.match(lowerCaseLetters)) {
            setValid(alert_low, true);
        } else {
            setValid(alert_low, false);
        };

        // Validate capital letters
        var upperCaseLetters = /[A-Z]/g;
        if(pwd.value.match(upperCaseLetters)) {
            setValid(alert_up, true);
        } else {
            setValid(alert_up, false);
        };

        // Validate numbers
        var numbers = /[0-9]/g;
        if(pwd.value.match(numbers)) {
            setValid(alert_dig, true);
        } else {
            setValid(alert_dig, false);
        };

        // Validate length
        if(pwd.value.length >= 8) {
            setValid(alert_min, true);
        } else {
            setValid(alert_min, false);
        }

        // Validate length
        if(pwd.value.length <= 20) {
            setValid(alert_max, true);
        } else {
            setValid(alert_max, false);
        }

        var simbol = /^[A-Za-z0-9\!\@\#\$\%\^\&\*\)\(+\=\._-]+$/g
        if(pwd.value.match(simbol)) {
            setValid(alert_sim, true);
        } else {
            setValid(alert_sim, false);
        };

        var nospace = /^\S*$/;
        if(pwd.value.match(nospace)) {
            setValid(alert_nospace, true);
        } else {
            setValid(alert_nospace, false);
        };

        checkValidate(pwd.value);

    }

</script>